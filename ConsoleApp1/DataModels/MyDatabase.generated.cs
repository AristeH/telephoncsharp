//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : FIRST
	/// Data Source    : localhost
	/// Server Version : WI-V3.0.5.33220 Firebird 3.0/tcp (Newpc-ruchi)/P13
	/// </summary>
	public partial class FIRSTDB : LinqToDB.Data.DataConnection
	{
		public ITable<CODETEL>    Codetels    { get { return this.GetTable<CODETEL>(); } }
		public ITable<DEPARTMENT> Departments { get { return this.GetTable<DEPARTMENT>(); } }
		public ITable<HIERARCHY>  Hierarchies { get { return this.GetTable<HIERARCHY>(); } }
		public ITable<OBLAST>     Oblasts     { get { return this.GetTable<OBLAST>(); } }
		public ITable<OPERATOR>   Operators   { get { return this.GetTable<OPERATOR>(); } }
		public ITable<PERSON>     People      { get { return this.GetTable<PERSON>(); } }
		public ITable<PERSONEL>   Personels   { get { return this.GetTable<PERSONEL>(); } }
		public ITable<POST>       Posts       { get { return this.GetTable<POST>(); } }
		public ITable<USER>       USERS       { get { return this.GetTable<USER>(); } }

		public FIRSTDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public FIRSTDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="SYSDBA", Name="CODETEL")]
	public partial class CODETEL
	{
		[Column(),              PrimaryKey,  NotNull] public string ID         { get; set; } // char(36)
		[Column(),                 Nullable         ] public string NAME       { get; set; } // char(50)
		[Column(),                 Nullable         ] public string CODE       { get; set; } // char(50)
		[Column("ID_OPERATOR"),    Nullable         ] public string IdOperator { get; set; } // char(36)
		[Column("ID_REGION"),      Nullable         ] public string IdRegion   { get; set; } // char(36)
		[Column(),                 Nullable         ] public string S          { get; set; } // char(9)
		[Column(),                 Nullable         ] public string PO         { get; set; } // char(9)
	}

	[Table(Schema="SYSDBA", Name="DEPARTMENT")]
	public partial class DEPARTMENT
	{
		[Column(),            PrimaryKey,  NotNull] public string ID       { get; set; } // varchar(36)
		[Column(),               Nullable         ] public string NAME     { get; set; } // varchar(200)
		[Column(),               Nullable         ] public int?   LEVEL    { get; set; } // integer
		[Column("ID_PARENT"),    Nullable         ] public string IdParent { get; set; } // varchar(36)
	}

	[Table(Schema="SYSDBA", Name="HIERARCHY")]
	public partial class HIERARCHY
	{
		[Column, Nullable] public string ID          { get; set; } // char(36)
		[Column, Nullable] public string NAME        { get; set; } // char(100)
		[Column, Nullable] public byte[] TEXT        { get; set; } // blob
		[Column, Nullable] public int?   WEIGHTLEFT  { get; set; } // integer
		[Column, Nullable] public int?   WEIGHTRIGHT { get; set; } // integer
	}

	[Table(Schema="SYSDBA", Name="OBLAST")]
	public partial class OBLAST
	{
		[PrimaryKey, NotNull    ] public string ID   { get; set; } // char(36)
		[Column,        Nullable] public string NAME { get; set; } // char(100)
	}

	[Table(Schema="SYSDBA", Name="OPERATOR")]
	public partial class OPERATOR
	{
		[PrimaryKey, NotNull    ] public string ID   { get; set; } // char(36)
		[Column,        Nullable] public string NAME { get; set; } // char(100)
	}

	[Table(Schema="SYSDBA", Name="PERSON")]
	public partial class PERSON
	{
		[PrimaryKey, NotNull] public string ID   { get; set; } // varchar(36)
		[Column,     NotNull] public string NAME { get; set; } // varchar(36)
		[Column,     NotNull] public string CODE { get; set; } // varchar(14)
	}

	[Table(Schema="SYSDBA", Name="PERSONEL")]
	public partial class PERSONEL
	{
		[Column(),                   Nullable] public long?     ID           { get; set; } // bigint
		[Column("ID_PERSON"),     NotNull    ] public string    IdPerson     { get; set; } // varchar(36)
		[Column("ID_POST"),       NotNull    ] public string    IdPost       { get; set; } // varchar(36)
		[Column("ID_DEPARTMENT"), NotNull    ] public string    IdDepartment { get; set; } // varchar(36)
		[Column(),                NotNull    ] public string    PERSONNUMBER { get; set; } // varchar(15)
		[Column(),                   Nullable] public string    EVENTSTART   { get; set; } // varchar(36)
		[Column(),                   Nullable] public TimeSpan? DATESTART    { get; set; } // time
		[Column(),                   Nullable] public string    EVENTEND     { get; set; } // varchar(36)
		[Column(),                   Nullable] public TimeSpan? DATEEND      { get; set; } // time
	}

	[Table(Schema="SYSDBA", Name="POST")]
	public partial class POST
	{
		[PrimaryKey, NotNull] public string ID   { get; set; } // varchar(36)
		[Column,     NotNull] public string NAME { get; set; } // varchar(150)
	}

	[Table(Schema="SYSDBA", Name="USERS")]
	public partial class USER
	{
		[PrimaryKey, NotNull    ] public string ID       { get; set; } // char(36)
		[Column,        Nullable] public string NAME     { get; set; } // char(100)
		[Column,        Nullable] public string CODE     { get; set; } // char(20)
		[Column,        Nullable] public string PASSWORD { get; set; } // char(20)
	}

	public static partial class TableExtensions
	{
		public static CODETEL Find(this ITable<CODETEL> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static DEPARTMENT Find(this ITable<DEPARTMENT> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static OBLAST Find(this ITable<OBLAST> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static OPERATOR Find(this ITable<OPERATOR> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static PERSON Find(this ITable<PERSON> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static POST Find(this ITable<POST> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static USER Find(this ITable<USER> table, string ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}
	}
}

#pragma warning restore 1591
